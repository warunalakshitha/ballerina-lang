#
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# -------------------------
# Compiler warning messages
# -------------------------

error.undefined.module=\
  undefined module ''{0}''

error.unused.import.module=\
  unused import module ''{0}''

error.redeclared.symbol=\
  redeclared symbol ''{0}''

error.redeclared.builtin.symbol=\
  redeclared builtin symbol ''{0}''

error.undefined.symbol=\
  undefined symbol ''{0}''

error.undefined.function=\
  undefined function ''{0}''

error.undefined.function.in.object=\
  undefined function ''{0}'' in object ''{1}''

error.undefined.connector=\
  undefined connector ''{0}''

error.undefined.field.in.structure=\
  undefined field ''{0}'' in {1} ''{2}''

error.cannot.infer.object.type.from.lhs=\
  cannot infer type of the object from ''{0}''

error.object.uninitialized.field=\
  uninitialized field ''{0}''

error.cyclic.type.reference=\
  cyclic type reference in ''{0}''

error.attempt.refer.non.accessible.symbol=\
  attempt to refer to non-accessible symbol ''{0}''

error.attempt.expose.non.public.symbol=\
  attempt to expose non-public symbol ''{0}''

error.invokable.must.return=\
  this {0} must return a result
  
error.main.should.be.public=\
  the main function should be public

error.invalid.return.with.main=\
  invalid return type ''{0}'', the main function may have no returns or may only return int

error.atleast.one.worker.must.return=\
  at least one worker in the {0} must return a result

error.fork.join.worker.cannot.return=\
  cannot return from a worker in fork/join

error.fork.join.invalid.worker.count=\
  fork/join minimum finishing worker count must be equal or less than the joining worker count

error.multi.value.return.expected=\
  multi value return is expected

error.single.value.return.expected=\
  single value return is expected

error.return.value.too.many=\
  too many return values

error.return.value.not.enough=\
  not enough return values

error.cannot.find.function.sig.for.function.in.object=\
  cannot find function signature for function ''{0}'' in object ''{1}''

error.attached.functions.cannot.have.visibility.modifiers=\
  visibility modifiers not allowed in object attached function definition ''{0}''

error.attached.functions.must.have.body=\
  object attached function definition must have a body ''{0}''

error.cannot.attach.functions.to.records=\
  cannot attach function ''{0}'' to record type ''{1}''

error.implementation.already.exist=\
  implementation already exist for the given function ''{0}'' in same module

error.cannot.initialize.object=\
  cannot initialize object ''{0}'', no implementation for the interface ''{1}''

error.cannot.find.matching.interface.function=\
  cannot find matching interface function ''{0}'' in the object ''{1}''

error.no.default.constructor.found=\
  no default constructor found for object ''{0}''

error.return.stmt.not.valid.in.resource=\
  return statement is not allowed inside a resource

error.duplicated.error.catch=\
  error ''{0}'' already caught in catch block

error.unreachable.code=\
  unreachable code

error.continue.cannot.be.outside.loop=\
  continue cannot be used outside of a loop

error.break.cannot.be.outside.loop=\
  break cannot be used outside of a loop

error.abort.cannot.be.outside.transaction.block=\
  abort cannot be used outside of a transaction block

error.fail.cannot.be.outside.transaction.block=\
  fail cannot be used outside of a transaction block

error.break.statement.cannot.be.used.to.exit.from.a.transaction=\
  break statement cannot be used to exit from a transaction

error.continue.statement.cannot.be.used.to.exit.from.a.transaction=\
  continue statement cannot be used to exit from a transaction

error.return.statement.cannot.be.used.to.exit.from.a.transaction=\
  return statement cannot be used to exit from a transaction

error.invalid.retry.count=\
  invalid transaction retry count

error.invalid.transaction.handler.args=\
  transaction handler function required single string parameter which is transaction id

error.invalid.transaction.handler.signature=\
  transaction handler function cannot have a return type

error.lambda.required.for.transaction.handler=\
  lambda function with string input parameter is required as transaction handler

error.done.statement.cannot.be.used.to.exit.from.a.transaction=\
  done statement cannot be used to exit from a transaction

error.transaction.cannot.be.used.within.handler=\
  transaction statement cannot be used within a transaction handler

error.invalid.function.pointer.assignment.for.handler=\
  invalid function pointer assignment for the transaction handler function

error.incompatible.types=\
  incompatible types: expected ''{0}'', found ''{1}''

error.incompatible.types.exp.tuple=\
  incompatible types: expected tuple, found ''{0}''

error.unknown.type=\
  unknown type ''{0}''

error.unary.op.incompatible.types=\
  operator ''{0}'' not defined for ''{1}''

error.binary.op.incompatible.types=\
  operator ''{0}'' not defined for ''{1}'' and ''{2}''

error.self.reference.var=\
  self referenced variable ''{0}''

error.invalid.worker.send.position=\
  invalid worker send statement position, must be a top level statement in a worker

error.invalid.worker.receive.position=\
  invalid worker receive statement position, must be a top level statement in a worker

error.undefined.worker=\
   undefined worker ''{0}''

error.invalid.worker.join.result.type=\
   invalid worker join result type, expected 'map'

error.invalid.worker.timeout.result.type=\
   invalid worker timeout result type, expected 'map'

error.worker.send.receive.parameter.count.mismatch=\
   parameter count mismatch in worker send/receive

error.worker.invalid.worker.interaction=\
   worker send/receive interactions are invalid; worker(s) cannot move onwards from the state: ''{0}''

error.worker.multiple.fork.join.send=\
   only a single worker send can be executed for joining results in a fork/join

error.assignment.count.mismatch=\
  assignment count mismatch: expected {0} values, but found {1}

error.assignment.required=\
  variable assignment is required

error.incompatible.types.cast=\
  incompatible types: ''{0}'' cannot be cast to ''{1}''

error.invalid.function.invocation=\
  function invocation on type ''{0}'' is not supported

error.invalid.function.invocation.with.name=\
  invalid function ''{0}'' invocation on type ''{1}''

error.incompatible.types.cast.with.suggestion=\
  incompatible types: ''{0}'' cannot be cast to ''{1}'', use conversion expression

error.incompatible.types.conversion=\
  incompatible types: ''{0}'' cannot be converted to ''{1}''

error.incompatible.types.conversion.with.suggestion=\
  incompatible types: ''{0}'' cannot be convert to ''{1}'', use cast expression

error.unsafe.cast.attempt=\
  unsafe cast from ''{0}'' to ''{1}'', use multi-return cast expression

error.unsafe.conversion.attempt=\
  unsafe conversion from ''{0}'' to ''{1}'', use multi-return conversion expression

error.array.literal.not.allowed=\
  array literal not allowed here

error.string.template.literal.not.allowed=\
  string template literals not allowed here

error.invalid.literal.for.type=\
  invalid literal for type ''{0}''

error.invalid.field.name.record.lit=\
  invalid field name in {0} literal. identifier or string literal expected

error.rest.field.not.allowed=\
  rest field not allowed in sealed records

error.open.record.constraint.not.allowed=\
  incompatible types: 'json' cannot be constrained with open record type ''{0}''

error.invalid.record.rest.descriptor=\
  invalid record rest descriptor

error.missing.required.record.field=\
  missing non-defaultable required record field ''{0}''

error.default.values.not.allowed.for.optional.fields=\
  a default value specified for optional field ''{0}''

error.not.enough.args.call=\
  not enough arguments in call to ''{0}()''

error.too.many.args.call=\
  too many arguments in call to ''{0}()''

error.defaultable.arg.passed.as.required.arg=\
  defaultable parameter expected. defaultable parameters should be passed as key-value pairs

error.multi.value.in.single.value.context=\
  multi-valued ''{0}()'' in single-value context

error.multi.valued.expr.in.single.valued.context=\
  multi-valued expression in single-valued context

error.does.not.return.value=\
  ''{0}()'' does not return a value;

error.invalid.namespace.prefix=\
  invalid namespace prefix ''{0}''

error.mismatching.xml.start.end.tags=\
  mismatching start and end tags found in xml element

error.no.new.variables.var.assignment=\
  no new variables on left side

error.invalid.variable.assignment=\
  invalid assignment in variable ''{0}''

error.cannot.assign.value.to.final.field=\
  cannot assign a value to final ''{0}''

error.cannot.assign.value.to.function.argument=\
  cannot assign a value to function argument ''{0}''

error.cannot.assign.value.to.readonly.field=\
  cannot assign a value to readonly ''{0}''

error.cannot.assign.value.to.endpoint=\
  cannot assign a value to endpoint ''{0}''

error.underscore.not.allowed=\
  underscore is not allowed here

error.operation.does.not.support.indexing=\
  invalid operation: type ''{0}'' does not support indexing

error.operation.does.not.support.field.access=\
  invalid operation: type ''{0}'' does not support field access

error.invalid.index.expr.struct.field.access=\
  invalid index expression: expected string literal

error.invalid.index.expr.tuple.field.access=\
  invalid index expression: expected integer literal

error.invalid.enum.expr=\
  invalid expression: expected enum type name ''{0}''

error.invalid.expr.in.match.stmt=\
  invalid expression in match statement

error.func.defined.on.not.supported.type=\
  function ''{0}'' defined on not supported type ''{1}''

error.func.defined.on.non.local.type=\
  function ''{0}'' defined on non-local type ''{1}''

error.object.field.and.func.with.same.name=\
  function and field named ''{0}'' in object ''{1}''

error.invalid.object.constructor=\
  invalid object constructor: input/output parameters are not allowed

error.explicit.invocation.of.record.init.is.not.allowed=\
  explicit invocation of ''{0}'' record initializer is not allowed

error.incompatible.type.constraint=\
  incompatible types: ''{0}'' cannot be constrained with ''{1}''

error.pkg.alias.not.allowed.here=\
  module alias not allowed here

error.undefined.annotation=\
  undefined annotation ''{0}''

error.annotation.not.allowed=\
  annotation ''{0}'' is not allowed in {1}

error.annotation.attachment.no.value=\
  no annotation value expected in annotation {0}

error.incompatible.types.array.found=\
  incompatible types: expected a ''{0}'', found an array

error.xml.attribute.map.update.not.allowed=\
  xml attributes cannot be updated as a collection. update attributes one at a time

error.xml.qname.update.not.allowed=\
  cannot assign values to an xml qualified name

error.invalid.namespace.declaration=\
  cannot bind prefix ''{0}'' to the empty namespace name

error.cannot.update.xml.sequence=\
  cannot update an xml sequence

error.iterable.not.supported.collection=\
  incompatible types: ''{0}'' is not an iterable collection

error.iterable.not.supported.operation=\
  operation ''{0}'' does not support given collection type

error.iterable.too.many.variables=\
  too many variables are defined for iterable type ''{0}''

error.iterable.not.enough.variables=\
  not enough variables are defined for iterable type ''{0}'', require at least ''{1}'' variables

error.iterable.too.many.return.args=\
  too many return arguments are defined for operation ''{0}''

error.iterable.not.enough.return.args=\
  not enough return arguments are defined for operation ''{0}''

error.iterable.lambda.required=\
  single lambda function required here

error.iterable.lambda.tuple.required=\
  iterable lambda function required a single param or a tuple param

error.iterable.no.args.required=\
  no argument required for operation ''{0}''

error.iterable.lambda.incompatible.types=\
  incompatible lambda function types: expected ''{0}'', found ''{1}''

error.iterable.return.type.mismatch=\
  cannot assign return value of ''{0}'' operation here, use a reduce operation

error.invalid.token=\
  invalid token {0}

error.missing.token=\
  missing token {0} before {1}

error.extraneous.input=\
  extraneous input {0}

error.mismatched.input=\
  mismatched input {0}. expecting {1}

error.failed.predicate=\
  {0}

error.syntax.error=\
  {0}

error.invalid.shift.operator=\
  invalid shift operator

error.module.not.found=\
  cannot resolve module ''{0}''

error.invalid.module.declaration=\
  invalid module declaration: expected ''{0}'', found ''{1}''

error.missing.module.declaration=\
  missing module declaration: expected ''{0}''

error.unexpected.module.declaration=\
  invalid module declaration ''{0}'': no module declaration is needed for default module

error.service.object.type.required=\
  incompatible types: requires an object type

error.service.invalid.object.type=\
  given type ''{0}'' does not match with service type interface

error.service.invalid.endpoint.type=\
  cannot infer type of the endpoint from the service type or binds of the service {0}

error.service.service.type.required.anonymous=\
  cannot infer type of the anonymous endpoint, requires a valid service type for service {0}

error.endpoint.object.type.required=\
  incompatible types: requires an object type

error.endpoint.object.new.has.param=\
  endpoint type should have a 'new' function with no param

error.endpoint.invalid.type=\
  invalid endpoint type {0}

error.endpoint.invalid.type.no.function=\
  invalid endpoint type {0}, function ''{1}'' not found.

error.endpoint.spi.invalid.function=\
  invalid endpoint type {0}, function ''{1}'' signature does not match with endpoint interface

error.endpoint.not.support.interactions=\
  endpoint type {0} does not support action invocations

error.endpoint.not.support.registration=\
  endpoint type {0} does not support service registration

error.invalid.action.invocation.syntax=\
  invalid action invocation syntax, use ''->'' operator

error.invalid.action.invocation=\
  invalid action invocation, expected an endpoint

error.undefined.action=\
  undefined action ''{0}'' in endpoint {1}''s client ''{2}''

error.tainted.value.passed.to.sensitive.parameter=\
  tainted value passed to sensitive parameter ''{0}''

error.tainted.value.passed.to.global.variable=\
  tainted value passed to global variable ''{0}''

error.unable.to.perform.taint.checking.with.recursion=\
  taint checking for ''{0}'' could not complete due to recursion with ''{1}'', add @tainted or @untainted to returns

error.unable.to.perform.taint.checking.for.builtin.method=taint analysis not defined for the builtin method: ''{0}''

error.entry.point.parameters.cannot.be.sensitive=\
  entry point parameter ''{0}'' cannot be sensitive

error.compiler.plugin.no.package.found=\
  cannot find module ''{0}'' specified in compiler plugin ''{1}''

error.compiler.plugin.no.annotations.found.in.package=\
  no annotations found in module ''{0}'' specified in compiler plugin ''{1}''

error.undefined.parameter=\
  undefined defaultable parameter ''{0}''

error.object.type.not.allowed=\
  object type not allowed as the constraint

error.table.cannot.be.created.without.constraint=\
  table cannot be created without a constraint

error.table.key.expected=\
  expected token ''key''

error.duplicate.named.args=\
  redeclared argument ''{0}''

error.undefined.column.in.table=\
  undefined column ''{0}'' for table of type ''{1}''

error.invalid.rest.args=\
  invalid rest arguments

error.cannot.get.all.fields=\
  cannot get all fields from a {0}

error.operator.not.supported=\
  operator ''{0}'' cannot be applied to type ''{1}''

error.operator.not.allowed.variable=\
  operator ''{0}'' cannot be applied on variable ''{1}''

error.invalid.record.literal.key=\
  invalid key: only identifiers are allowed for record literal keys

error.invalid.function.pointer.invocation=\
  invalid function pointer invocation on non-invokable field ''{0}'' in record ''{1}''

error.invalid.default.param.value=\
  invalid value for parameter ''{0}'': only simple literals allowed

error.extern.function.cannot.have.body=\
  extern function ''{0}'' cannot have a body
  
error.abstract.object.constructor=\
  abstract object ''{0}'' cannot have a constructor method
  
error.cannot.initialize.abstract.object=\
  cannot initialize abstract object ''{0}''

error.invalid.interface.of.non.abstract.object=\
  no implementation found for the function ''{0}'' of non-abstract object ''{1}''

error.cannot.attach.functions.to.abstract.object=\
  cannot attach function ''{0}'' to abstract object ''{1}''

error.abstract.object.function.cannot.have.body=\
  function ''{0}'' in abstract object ''{1}'' cannot have a body

error.incompatible.type.reference=\
  incompatible types: ''{0}'' is not an abstract object

error.redeclared.type.reference=\
  redeclared type reference ''{0}''

error.redeclared.function.from.type.reference=\
  redeclared symbol ''{0}'': trying to copy a duplicate function through referenced type ''{1}''

# match statement related error messages

error.match.stmt.cannot.guarantee.a.matching.pattern=\
  A matching pattern cannot be guaranteed for types ''{0}''

error.match.stmt.unreachable.pattern=\
  unreachable pattern: preceding patterns are too general or the pattern ordering is not correct

error.match.stmt.unmatched.pattern=\
  pattern will not be matched

# error type related errors

error.require.error.mapping.value=\
  require mapping value for error details

error.throw.stmt.not.supported=\
  throw statement not supported, use panic statement instead

error.try.stmt.not.supported=\
  try-catch statement not supported, use trap expression instead

error.unknown.builtin.method=\
  unknown builtin method ''{0}''

error.unsupported.builtin.method=\
  built-in method ''{0}'' not supported here

# checked expression related error messages

error.checked.expr.invalid.usage.no.error.type.rhs=\
  invalid usage of the checked expression operator: no expression type is equivalent to error type

error.checked.expr.invalid.usage.only.error.types.rhs=\
  invalid usage of the checked expression operator: all expression types are equivalent to error type

error.start.require.invocation=\
  invalid async operation usage, require an invocation

error.invalid.expr.statement=\
  invalid statement

error.invalid.action.invocation.as.expr=\
  action invocation as an expression not allowed here

error.ambiguous.type=\
  ambiguous type ''{0}''

error.uninitialized.variable=\
  variable ''{0}'' is not initialized

error.invalid.any.var.def=\
  invalid variable definition; can not infer the assignment type.

error.invalid.record.literal=\
  invalid usage of record literal with type ''{0}''

error.duplicate.key.in.record.literal=\
  invalid usage of {0} literal: duplicate key ''{1}''

error.invalid.array.literal=\
  invalid usage of array literal with type ''{0}''

error.invalid.tuple.literal=\
  invalid usage of tuple literal with type ''{0}''

error.invalid.type.new.literal=\
  invalid usage of ''new'' with type ''{0}''

error.mismatching.array.literal.values=\
  size mismatch in sealed array. expected ''{0}'', but found ''{1}''

error.array.index.out.of.range=\
  array index out of range: index: ''{0}'', size: ''{1}''

error.sealed.array.type.can.not.infer.size=\
  invalid usage of sealed type: can not infer array size

error.sealed.array.type.not.initialized=\
  invalid usage of sealed type: array not initialized

error.invalid.usage.of.keyword=\
  illegal usage of keyword ''{0}''

# Variable Reference Errors

error.invalid.tuple.binding.pattern=\
  invalid tuple binding pattern; member variable count mismatch with member type count

error.invalid.type.for.tuple.var.expr=\
  invalid tuple variable; expecting a tuple type but found ''{0}'' in expression

error.invalid.type.definition.for.tuple.var=\
  invalid tuple variable; expecting a tuple type but found ''{0}'' in type definition

error.invalid.record.binding.pattern=\
  invalid record binding pattern with type ''{0}''

error.invalid.field.in.record.binding.pattern=\
  invalid record binding pattern; unknown field ''{0}'' in record type ''{1}''

error.invalid.record.literal.in.binding.pattern=\
  record literal is not supported for record binding pattern

error.no.matching.record.ref.found=\
  no matching record reference found for field ''{0}''

error.multiple.matching.record.ref.found=\
  multiple matching record references found for field ''{0}''

error.cannot.match.closed.record.variable.ref=\
  can not match record variable reference, type ''{0}'' is not a closed record type

error.cannot.match.closed.record.variable.ref.fields=\
  not enough fields to match to closed record type ''{0}''

error.invalid.closed.record.binding.pattern=\
  invalid closed record binding pattern on opened record type ''{0}''

error.not.enough.fields.to.match.closed.record=\
  not enough fields to match to closed record type ''{0}''

# safe navigation operator related errors

error.safe.navigation.not.required=\
  safe navigation operator not required for type ''{0}''

error.invalid.error.lifting.on.lhs=\
  error lifting operator cannot be used in the target expression of an assignment

error.tuple.index.out.of.range=\
  tuple index out of range: index: ''{0}'', size: ''{1}''

error.incompatible.type.check=\
  incompatible types: ''{0}'' will not be matched to ''{1}''
  
error.unnecessary.condition=\
  unnecessary condition: expression will always evaluate to ''true''

# streaming related errors

error.undefined.stream.reference=\
  undefined stream name (or alias) ''{0}'' found in select clause

error.undefined.stream.attribute=\
  undefined stream attribute ''{0}'' found in select clause

error.incompatible.stream.action.argument=\
  incompatible stream action argument type ''{0}'' defined

error.invalid.stream.action.argument.count=\
  invalid number of arguments found for stream action function. found ''{0}'' argument but required exactly '1' argument

error.invalid.stream.action.argument.type=\
  invalid stream action argument type found. it should be a {0} array type argument

error.invalid.stream.attribute.type=\
  invalid stream attribute type found. it should be either integer or long or string or boolean type attribute

error.streaming.incompatible.types=\
  incompatible types: expected type ''{0}'' for attribute ''{1}'', found ''{2}''

error.arrow.expression.mismatched.parameter.length=\
  invalid number of parameters used in arrow expression. expected: ''{0}'' but found ''{1}''

error.arrow.expression.cannot.infer.type.from.lhs=\
  cannot infer types of the arrow expression with unknown invokable type

error.arrow.expression.not.supported.iterable.operation=\
  arrow expression can not be used with ''{0}'' iterable

# decimal related errors

error.integer.too.large=\
  Integer ''{0}'' too large

error.integer.too.small=\
  Integer ''{0}'' too small

error.hexadecimal.too.large=\
  Hexadecimal ''{0}'' too large

error.hexadecimal.too.small=\
  Hexadecimal ''{0}'' too small

error.binary.too.large=\
  Binary ''{0}'' too large

error.binary.too.small=\
  Binary ''{0}'' too small

error.clone.invocation.invalid=\
  Cannot clone a value of a type other than anydata \
  (boolean|int|byte|float|decimal|string|xml|table|anydata[]|map<anydata>|records (with only `anydata` fields)|()), \
  but found ''{0}''

# data flow analysis errors

error.partially.initialized.variable=\
  variable ''{0}'' may not have been initialized

# -------------------------
# Compiler warning messages
# -------------------------

warning.redeclared.import.module=\
  redeclared import module ''{0}''

warning.undocumented.parameter=\
  undocumented parameter ''{0}''

warning.no.such.documentable.parameter=\
  no such documentable parameter ''{0}''

warning.parameter.already.documented =\
  parameter ''{0}'' already documented

warning.undocumented.field=\
  undocumented field ''{0}''

warning.no.such.documentable.field=\
  no such documentable field ''{0}''

warning.field.already.documented =\
  field ''{0}'' already documented

warning.undocumented.variable=\
  undocumented variable ''{0}''

warning.no.such.documentable.variable=\
  no such documentable variable ''{0}''

warning.variable.already.documented =\
  variable ''{0}'' already documented

warning.undocumented.return.parameter =\
  undocumented return parameter

warning.no.documentable.return.parameter =\
  no documentable return parameter

warning.no.such.documentable.attribute =\
  no such documentable attribute ''{0}'' with doc prefix ''{1}''

warning.duplicate.documented.attribute =\
  already documented attribute ''{0}''

warning.invalid.use.of.endpoint.documentation.attribute =\
  invalid use of doc prefix ''{0}''

warning.undefined.documentation.public.function=\
  undefined documentation for public function ''{0}''

warning.usage.of.deprecated.function=\
  usage of deprecated function ''{0}''
