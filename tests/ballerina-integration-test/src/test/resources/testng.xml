<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->

<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<suite name="Ballerina-Test-Suite">
    <listeners>
        <listener class-name="org.ballerinalang.test.listener.TestExecutionListener"/>
        <listener class-name="org.ballerinalang.test.listener.TestNGListener"/>
    </listeners>

    <!-- Below tests should run sequentially since it will use same port in each test -->
    <test name="ballerina-http-tests" parallel="false">
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>

        <classes>
            <class name="org.ballerinalang.test.service.http.HttpBaseTest"/>
            <class name="org.ballerinalang.test.service.http.configuration.AcceptEncodingHeaderTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpHeaderTestCases"/>
            <class name="org.ballerinalang.test.service.http.sample.RedirectTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.RoutingServiceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.MutualSSLTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.MutualSSLWithCerts"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPVerbsPassthruTestCases"/>
            <class name="org.ballerinalang.test.service.http.sample.HTTPClientActionsTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.EchoServiceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ExpectContinueTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpPayloadTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ProxyServerTest"/>
            <class name="org.ballerinalang.test.service.http.sample.EcommerceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.PassthroughServiceSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpOptionsTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.RetrySampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HelloWorldSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.ServiceChainingSampleTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.TestReusabilityOfRequest"/>
            <class name="org.ballerinalang.test.service.http.sample.CompressionTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.IdleTimeoutResponseTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpPipeliningTestCase"/>
            <class name="org.ballerinalang.test.service.http.sample.HttpStatusCodeTestCase"/>
        </classes>
    </test>

    <test name="ballerina-resiliency-tests" parallel="methods" thread-count="13">
        <classes>
            <class name="org.ballerinalang.test.service.resiliency.HttpResiliencyTest"/>
        </classes>
    </test>

    <test name="ballerina-channel-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.channel.ChannelsResourcesTest"/>
        </classes>
    </test>

    <test name="ballerina-http2-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.service.http2.Http2BaseTest"/>
            <class name="org.ballerinalang.test.service.http2.Http2ServerPushTestCase"/>
            <class name="org.ballerinalang.test.service.http2.Http2ToHttp1FallbackTestCase"/>
            <class name="org.ballerinalang.test.service.http2.RedirectTestCase"/>
        </classes>
    </test>

    <test name="ballerina-auth-tests" parallel="false">
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>
        <classes>
            <class name="org.ballerinalang.test.auth.AuthBaseTest"/>
            <class name="org.ballerinalang.test.auth.AuthnConfigInheritanceAuthDisableTest"/>
            <class name="org.ballerinalang.test.auth.AuthnConfigInheritanceTest"/>
            <class name="org.ballerinalang.test.auth.AuthzConfigInheritanceTest"/>
            <class name="org.ballerinalang.test.auth.ResourceLevelAuthTest"/>
            <class name="org.ballerinalang.test.auth.ServiceLevelAuthnTest"/>
            <class name="org.ballerinalang.test.auth.OAuthConfigTest"/>
        </classes>
    </test>

    <test name="ballerina-filter-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.filter.FilterBaseTest"/>
            <class name="org.ballerinalang.test.filter.MultpleFiltersTestCase"/>
            <class name="org.ballerinalang.test.filter.InvocationContextTestCase"/>
            <class name="org.ballerinalang.test.filter.SingleFilterTestCase"/>
        </classes>
    </test>

    <test name="ballerina-transaction-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.transaction.MicroTransactionTestCase"/>
        </classes>
    </test>

    <test name="ballerina-secure-listener-tests" parallel="false">
        <groups>
            <run>
                <exclude name="broken"/>
            </run>
        </groups>
        <classes>
            <class name="org.ballerinalang.test.securelistener.SecureListenerBaseTest"/>
            <class name="org.ballerinalang.test.securelistener.NoTokenPropagationTest"/>
            <class name="org.ballerinalang.test.securelistener.SecureClientWrongAuthProviderTest"/>
            <class name="org.ballerinalang.test.securelistener.SecureListenerNonSpecificHandlerTest"/>
            <class name="org.ballerinalang.test.securelistener.SecureListenerSpecificHandlerTest"/>
            <class name="org.ballerinalang.test.securelistener.TokenPropagationTest"/>
        </classes>
    </test>

    <test name="ballerina-websocket-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.service.websocket.WebSocketTestCommons"/>
            <class name="org.ballerinalang.test.service.websocket.CancelWebSocketUpgradeTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientInitializationFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientServiceTest"/>
            <class name="org.ballerinalang.test.service.websocket.CustomHeaderClientSupportTest"/>
            <class name="org.ballerinalang.test.service.websocket.CustomHeaderServerSupportTest"/>
            <class name="org.ballerinalang.test.service.websocket.OnErrorWebSocketTest"/>
            <class name="org.ballerinalang.test.service.websocket.PingPongSupportTestCase"/>
            <class name="org.ballerinalang.test.service.websocket.ResourceFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.UpgradeResourceFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketAutoPingPongTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketContinuationAndAggregationTest"/>
            <class name="org.ballerinalang.test.service.websocket.PushAndOnTextResourceTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketQueryAndPathParamSupportTestCase"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketServiceNotFoundTest"/>
            <class name="org.ballerinalang.test.service.websocket.WebSocketSimpleProxyTestCase"/>
            <class name="org.ballerinalang.test.service.websocket.OnBinaryContinuationTest"/>
            <class name="org.ballerinalang.test.service.websocket.MissingResourcesTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientInitializationFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.ClientCloseTest"/>
            <class name="org.ballerinalang.test.service.websocket.PushTextFailureTest"/>
            <class name="org.ballerinalang.test.service.websocket.IsOpenTest"/>
        </classes>
    </test>

    <test name="ballerina-grpc-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.service.grpc.sample.GrpcBaseTest"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ClientStreamingTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingBasicTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingArrayValueTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingHeaderTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnarySecuredBlockingBasicTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.GrpcMutualSslWithCertsTest"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingNestedStructTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.InvalidServiceMethodTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingEmptyValueTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.InvalidMessageTypeTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ServiceUnavailableTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ProtoBuilderTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ServerStreamingTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.UnaryBlockingEnumTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.sample.ErrorServiceTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.tool.InvalidServiceContractTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.tool.StubGeneratorTestCase"/>
            <class name="org.ballerinalang.test.service.grpc.tool.ProtoMessageTestCase"/>
        </classes>
    </test>

    <test name="ballerina-observability-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.observability.tracing.TracingTestCase"/>
            <class name="org.ballerinalang.test.observability.metrics.MetricsTestCase"/>
        </classes>
    </test>

    <test name="ballerina-streaming-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.streaming.StreamsWithinServicesTestCase"/>
        </classes>
    </test>

    <test name="ballerina-security-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.security.HTTPResponseXMLSecurityTestCase"/>
        </classes>
    </test>

    <test name="ballerina-jms-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.jms.JMSConnectorTestCase"/>
        </classes>
    </test>

    <test name="ballerina-websub-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.service.websub.WebSubBaseTest"/>
            <!-- WebSubServiceExtensionTestCase or any other test which does not have @BeforeClass and belongs to the
                "websub-test" group needs to be the first test to run to ensure @BeforeGroup is executed before
                @BeforeClass in test classes which have @BeforeClass -->
            <class name="org.ballerinalang.test.service.websub.WebSubServiceExtensionTestCase"/>
            <class name="org.ballerinalang.test.service.websub.WebSubCoreFunctionalityTestCase"/>
            <class name="org.ballerinalang.test.service.websub.WebSubContentTypeSupportTestCase"/>
            <class name="org.ballerinalang.test.service.websub.WebSubDiscoveryWithMultipleSubscribersTestCase"/>
            <class name="org.ballerinalang.test.service.websub.WebSubRedirectionTestCase"/>
        </classes>
    </test>

    <test name="ballerina-data-streaming-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.data.streaming.TableToXMLStreamingTestCase"/>
        </classes>
    </test>

    <test name="ballerina-checkpointing-tests" parallel="false">
        <classes>
            <class name="org.ballerinalang.test.checkpointing.InterruptibleWorkerServiceTestCase"/>
            <class name="org.ballerinalang.test.checkpointing.InterruptibleForkJoinServiceTestCase"/>
            <class name="org.ballerinalang.test.checkpointing.InterruptibleAsyncServiceTestCase"/>
            <class name="org.ballerinalang.test.checkpointing.InterruptibleBaseTestCase"/>
            <class name="org.ballerinalang.test.checkpointing.InterruptibleNativeCallableTestCase"/>
        </classes>
    </test>
</suite>
